<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="650" height="395" borderStyle="inset" 
	addedToStage="{showEvent()}" >
	<mx:Script>
		<![CDATA[
			import components.despachoPanel;
			import clases.inventario.Despacho;
			import mx.events.CloseEvent;
			import clases.MET;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import flash.utils.Timer;
			import mx.managers.PopUpManager;
			
			[Bindable]
			private var listaProductos:ArrayCollection;
			private var childrens:Array;
			private var c:Conexion = new Conexion;
			private var despPanel:despachoPanel = new despachoPanel;
			private var productoSeleccionado:Object;
			
			private function editarClick():void{
				this.childrens = this.getChildren();
				removeAllChildren();
				var object:nuevoProducto = new nuevoProducto;
				//al obtener el objeto no se debe castear!
				//var met:Object = listaMET.getItemAt(listaGrid.selectedIndex);
				//Alert.show("grid index: "+listaGrid.selectedIndex+" lista size: "+listaMET.length+" rut met: "+met.rut);
				this.addChild(object );
				//object.cargarMET(met);
				
			}
			private function eliminarClick():void{
				if(listaGrid.selectedItem!=null)
					Alert.show("¿Desea realmente eliminar el registro?", "Confirmación", Alert.YES|Alert.NO, this, confirmHandler,null, Alert.NO);
				else{
					Alert.show("Error, primero debe seleccionar un elemento!.");
				}
			}
			private function confirmHandler(event:CloseEvent):void {
				if (event.detail == Alert.YES) {
					var object:Object = listaProductos.getItemAt(listaGrid.selectedIndex);
					
					c.deleteMET(object.codigo);
					var minuteTimer:Timer = new Timer(1000, 1);
					minuteTimer.addEventListener(TimerEvent.TIMER_COMPLETE, onTimerComplete);
					minuteTimer.start();
					
				}
			}
			private function onTimerComplete(event:TimerEvent):void{
            	showEvent();
        	}
			public function showVerTodos():void{
				removeAllChildren();
				//vuelve a insertar todos los hijos guardados
				var i:int;
				for(i=0;i<childrens.length;i++){
					this.addChild(childrens[i]);
				}
				//llama al evento que obtiene todos los mets de la bd
				showEvent();
			}
			
			private function showEvent():void{
				var c:Conexion = new Conexion;
				listaProductos = c.getAllProducto();
			}
			private function despacharClick():void{
				if(listaGrid.selectedItem!=null){
					productoSeleccionado = listaGrid.selectedItem;
					
					PopUpManager.addPopUp(despPanel, MetActivo.parent, true);
					despPanel.productoInput.text = productoSeleccionado.nombre;
		            PopUpManager.centerPopUp(despPanel);
		            despPanel.accionButton.addEventListener(MouseEvent.CLICK, closePopUpAcepta);
		        	despPanel.cancelarButton.addEventListener(MouseEvent.CLICK, closePopUpCancelar);
				}
				else{
					Alert.show("Error, primero debe seleccionar un elemento!.");
				}
			}
			private function closePopUpAcepta(evt:MouseEvent):void {
            	var despacho:Despacho = new Despacho;
				var cant:int= despPanel.cantidadStepper.value;
				despacho.cantidad=cant;
				despacho.destino = despPanel.destinoInput.text;
				despacho.producto_codigo = productoSeleccionado.codigo;
				despacho.producto_nombre = productoSeleccionado.nombre;
				despacho.responsable = MetActivo.rut;
				var c:Conexion = new Conexion;
				c.insertDespacho(despacho);
	        }
	       	private function closePopUpCancelar(evt:MouseEvent):void {
	                PopUpManager.removePopUp(despPanel);
	        }
		]]>
	</mx:Script>
	<mx:DataGrid x="10" y="37" width="626" height="314" id="listaGrid" dataProvider="{listaProductos}">
		<mx:columns>
			<mx:DataGridColumn headerText="Código" dataField="codigo" width="50"/>
			<mx:DataGridColumn headerText="Nombre" dataField="nombre" width="100"/>
			<mx:DataGridColumn headerText="Descripción" dataField="descripcion" width="120"/>
			<mx:DataGridColumn headerText="Unidad" dataField="unidad" width="70"/>
			<mx:DataGridColumn headerText="Stock de seguridad" dataField="stock_seguridad" width="80"/>
		</mx:columns>
	</mx:DataGrid>
	<mx:Text x="10" y="10" text="Lista con todos los productos registrados" fontSize="11"/>
	<mx:Button x="191" y="359" label="Actualizar tabla" click="{showEvent()}"/>
	<mx:Button x="574" y="359" label="Nuevo" click="editarClick()"/>
	<mx:Button x="315" y="359" label="Eliminar" click="eliminarClick()"/>
	<mx:Button x="490" y="359" label="Ingresar" click="eliminarClick()"/>
	<mx:Button x="395" y="359" label="Despachar" click="despacharClick()"/>
</mx:Canvas>