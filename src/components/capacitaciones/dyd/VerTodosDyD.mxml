<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" label="METs"  width="775" height="412"
	addedToStage="{showEvent()}"  xmlns:ns1="com.hillelcoren.components.*" 
	xmlns:ns2="com.hillelcoren.components.autoComplete.classes.*" x="10" y="28">
	<mx:Script>
	<![CDATA[
		import mx.managers.PopUpManager;
		import org.alivepdf.fonts.CodePage;
		import org.alivepdf.fonts.CoreFont;
		import org.alivepdf.fonts.EmbeddedFont;
		import org.alivepdf.fonts.FontFamily;
		import org.alivepdf.fonts.IFont;
		import org.alivepdf.images.ColorSpace;
		import org.alivepdf.layout.Align;
		import org.alivepdf.layout.Mode;
		import org.alivepdf.layout.Orientation;
		import org.alivepdf.layout.Position;
		import org.alivepdf.layout.Resize;
		import org.alivepdf.layout.Size;
		import org.alivepdf.layout.Unit;
		import org.alivepdf.links.HTTPLink;
		import org.alivepdf.links.Highlight;
		import org.alivepdf.links.ILink;
		import org.alivepdf.links.InternalLink;
		import org.alivepdf.pages.Page;
		import org.alivepdf.pdf.PDF;
		import org.alivepdf.saving.Method;
            
            
		import mx.events.CloseEvent;
		import clases.MET;
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import flash.utils.Timer;
	
		[Bindable]
		private var listaDD:ArrayCollection;
		private var c:Conexion = new Conexion;
		private var childrens:Array;
		private var urlStream:URLStream = new URLStream();
		private var fr:FileReference = new FileReference; 
		private var total:Number = 0; 
		private var insc:InscribirSENCE = new InscribirSENCE();
		 
		private function editarClick():void{
			this.disableButtons();
			if(listaGrid.selectedItem!=null){
				this.childrens = this.getChildren();
				removeAllChildren();
				var object:EditarDyD = new EditarDyD;
				//al obtener el objeto no se debe castear!
				var dyd:Object = listaDD.getItemAt(listaGrid.selectedIndex);
				//Alert.show("grid index: "+listaGrid.selectedIndex+" lista size: "+listaMET.length+" rut met: "+met.rut);
						
				this.addChild(object );
				object.cargarDD(dyd);
				
			}
			else{
				Alert.show("Error, primero debe seleccionar un elemento!.");
			}
		}
		public function nuevoClick():void{
			this.childrens = this.getChildren();
			removeAllChildren();
			var object:NuevoDyD = new NuevoDyD;
			this.addChild(object);
		}
		private function eliminarClick():void{
			this.disableButtons();
			if(listaGrid.selectedItem!=null)
				Alert.show("¿Desea realmente eliminar el registro?", "Confirmación", Alert.YES|Alert.NO, MetActivo.parent as Sprite, confirmHandler,null, Alert.NO);
			else{
				Alert.show("Error, primero debe seleccionar un elemento!.");
			}
		}
		private function confirmHandler(event:CloseEvent):void {
			if (event.detail == Alert.YES) {
				var dd:Object = listaDD.getItemAt(listaGrid.selectedIndex);
				
				c.deleteDD(dd.codigo_interno);
				var minuteTimer:Timer = new Timer(1000, 2);
				minuteTimer.addEventListener(TimerEvent.TIMER_COMPLETE, onTimerComplete);
				minuteTimer.start();
				
			}
		}
		private function onTimerComplete(event:TimerEvent):void{
        	showEvent();
    	}
		public function showVerTodos():void{
			removeAllChildren();
			//vuelve a insertar todos los hijos guardados
			var i:int;
			for(i=0;i<childrens.length;i++){
				this.addChild(childrens[i]);
			}
			//llama al evento que obtiene todos los mets de la bd
			showEvent();
		}
		
		public function showEvent():void{
			listaDD = new ArrayCollection;
			var c:Conexion = new Conexion;
			listaDD = c.getAllDD();
			this.disableButtons();
		}
		private function printEvent():void{
			this.listaGrid.selectedIndex=-1;
			this.disableButtons();
			var p:PDF = new PDF( Orientation.PORTRAIT, Unit.MM, Size.A4 );
			
			p.addPage();				
			p.addImage( this.listaGrid, new Resize ( Mode.FIT_TO_PAGE, Position.CENTERED ) );
			
			var archivo:FileReference = new FileReference;
			archivo.save(p.save(Method.LOCAL), "Lista DyD.pdf");
			
		}
		private function enableButtons():void{
			this.eliminarButton.enabled=true;
			if(listaDD.getItemAt((this.listaGrid.selectedIndex)).estado =="En validación")
				this.inscribirButton.enabled=true;
			MetActivo.rutSeleccionado = listaDD.getItemAt(this.listaGrid.selectedIndex).codigo_interno;
		}
		private function disableButtons():void{
			this.eliminarButton.enabled=false;
			this.inscribirButton.enabled=false;
		}
		
		private function progressHandler(event:ProgressEvent):void {  
        	progressBar.setProgress(event.bytesLoaded, event.bytesTotal);
        	var porcentaje:Number = (Math.round((event.bytesLoaded/event.bytesTotal) * 100) );
        	progressBar.label = "Descargando " +porcentaje + "%";  
   		 }
		private function completeHandler(event:Event):void {  
            progressBar.label = "Descarga completa"  
         	if(this.listaGrid.selectedIndex==0)
				this.disableButtons();
  
    	}    
    	private function fichaClick():void{
    		/*
    		this.childrens = this.getChildren();
			removeAllChildren();
			var ficha:FichaMET = new FichaMET;
			this.addChild(ficha);
			ficha.setData(this.listaMET.getItemAt(listaGrid.selectedIndex));
			*/
    	}
    	private function inscribirClick():void{
    		
			PopUpManager.addPopUp(insc, this, true);
			PopUpManager.centerPopUp(insc);
			insc.cancelarButton.addEventListener(MouseEvent.CLICK, closePopUpCancelar);
			insc.setCodigoDD(listaDD.getItemAt(this.listaGrid.selectedIndex).codigo_interno);
    	}
    	private function closePopUpCancelar(evt:MouseEvent):void {
        	PopUpManager.removePopUp(insc);
        	this.showEvent();
        }
    	
	]]>
	</mx:Script>
		<mx:DataGrid x="10" y="37" width="755" height="335" id="listaGrid" dataProvider="{listaDD}"
			 doubleClickEnabled="true" doubleClick="{editarClick()}" itemClick="{enableButtons()}"
			   >
			<mx:columns>
				<mx:DataGridColumn headerText="Fecha Planificación" dataField="fecha" width="90"/>
				<mx:DataGridColumn headerText="Código Interno" dataField="codigo_interno" width="70"/>
				<mx:DataGridColumn headerText="Nombre" dataField="nombre" width="200"/>
				<mx:DataGridColumn headerText="Estado" dataField="estado" width="80"/>
				<mx:DataGridColumn headerText="Código SENCE" dataField="codigo_sence" width="70"/>
			</mx:columns>
		</mx:DataGrid>
		<mx:Text x="10" y="10" text="Lista con todos los Diseños y Desarrollos" fontSize="11"/>
		<mx:Button x="378" y="380" label="Actualizar tabla" id="actualizarButton" click="{showEvent()}"/>
		<mx:Button x="261" y="380" label="Imprimir tabla" id="imprimirButton" click="{printEvent()}"/>
		<mx:Button x="703" y="380" label="Nuevo" id="nuevoButton" click="{nuevoClick()}"/>
		<mx:Button x="623" y="380" label="Eliminar" id="eliminarButton" click="{eliminarClick()}" enabled="false"/>
		<mx:Text x="496" y="11" text="Buscar por código interno:"/>
		<ns1:AdvancedAutoComplete x="655" y="10" width="110" dataProvider="{listaDD}" labelField="codigo_interno"
			prompt="Ingrese código" allowMultipleSelection="false" />
		<mx:ProgressBar x="10" y="380" width="130" id="progressBar" mode="manual" label="Descarga 0%"/>
		<mx:Button x="502" y="380" label="Inscribir SENCE" click="{inscribirClick()}" enabled="false" id="inscribirButton"/>

	
</mx:Canvas>
